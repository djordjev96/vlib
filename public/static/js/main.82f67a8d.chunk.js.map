{"version":3,"sources":["api.js","components/SearchBook.js","numOfBooksContext.js","booksContext.js","components/EditBook.js","components/BookRow.js","components/BookTable.js","components/FilterableBookTable.js","components/AddBook.js","components/MainComponent.js","components/LoginComponent.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","headers","common","localStorage","getItem","responseType","SearchBook","searchInput","onSearchInputChange","type","placeholder","value","onChange","e","target","numOfBooksContext","React","createContext","BooksContext","EditBook","book","editBook","useState","error","setError","onSubmit","preventDefault","title","document","getElementById","author","publisher","note","patch","_id","validateStatus","then","res","status","handleSubmit","name","id","defaultValue","customStyles","content","top","left","right","bottom","border","background","transform","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","BookRow","useContext","numOfBooks","setNumOfBooks","BookContext","books","setBooks","thisBook","setThisBook","modalIsOpen","setIsOpen","Modal","setAppElement","onClick","window","confirm","delete","alert","index","indexOf","newBooks","splice","deleteBook","className","isOpen","onRequestClose","style","contentLabel","editedBook","BookTable","numOfBooksFound","rows","forEach","toLowerCase","push","FilterableBookTable","setSearchInput","setNumOfBooksFound","useEffect","length","get","data","catch","console","log","Provider","AddBook","post","MainComponent","LoginComponent","email","password","setItem","token","location","reload","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.82f67a8d.chunk.js","sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://vlib-app.herokuapp.com';\naxios.defaults.headers.common = {'Authorization': `Bearer ${localStorage.getItem('token')}`};\naxios.defaults.responseType = 'json';\nexport default axios;","import React from 'react';\nimport axios from '../api';\n\nconst SearchBook = ({searchInput, onSearchInputChange}) => {\n        return (\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={searchInput}\n                    onChange={(e) => onSearchInputChange(e.target.value)}\n                />\n            </form>\n        );\n}\n\nexport { SearchBook as default };\n","import React from 'react';\n\nconst numOfBooksContext = React.createContext();\n\nexport { numOfBooksContext as default };","import React from 'react';\n\nconst BooksContext = React.createContext();\n\nexport { BooksContext as default };","import React, { useState } from 'react';\nimport axios from '../api';\n\nconst EditBook = ({book, editBook}) => {\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const title = document.getElementById('title').value;\n        const author = document.getElementById('author').value;\n        const publisher = document.getElementById('publisher').value;\n        const note = document.getElementById('note').value;\n\n        axios\n            .patch(\n                '/books/' + book._id,\n                {\n                    title,\n                    author,\n                    publisher,\n                    note,\n                },\n                {\n                    validateStatus: () => true,\n                }\n            )\n            .then((res) => {\n                if (res.status === 201) {\n                    setError('Knjiga je uspesno izmenjena!');\n                    const newBook = {\n                        title, \n                        author,\n                        publisher,\n                        note\n                    }\n                    editBook(newBook);\n                } else {\n                    setError('Polja naslov, autor i izdavac su obavezna');\n                }\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    defaultValue={book.title}\n                />\n                <input\n                    type=\"text\"\n                    name=\"author\"\n                    id=\"author\"\n                    defaultValue={book.author}\n                />\n                <input\n                    type=\"text\"\n                    name=\"publisher\"\n                    id=\"publisher\"\n                    defaultValue={book.publisher}\n                />\n                <input\n                    type=\"text\"\n                    name=\"note\"\n                    id=\"note\"\n                    defaultValue={book.note}\n                />\n                <button type=\"submit\" value=\"Submit\">\n                    Posalji\n                </button>\n            </form>\n            {error}\n        </div>\n    );\n};\n\nexport { EditBook as default };\n","import React, { useState, useContext } from 'react';\nimport axios from '../api';\nimport numOfBooksContext from '../numOfBooksContext';\nimport BookContext from '../booksContext';\nimport EditBook from './EditBook';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        border: '1px solid #ccc',\n        background: '#fff',\n        transform: 'translate(-50%, -50%)',\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        borderRadius: '4px',\n        outline: 'none',\n        padding: '20px',\n    },\n};\n\nconst BookRow = ({ book }) => {\n    const {numOfBooks, setNumOfBooks} = useContext(numOfBooksContext);\n    const {books, setBooks} = useContext(BookContext);\n    const [thisBook, setThisBook] = useState(book);\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    Modal.setAppElement('#root');\n\n\n    const deleteBook = (book) => {\n        if (\n            window.confirm(\n                'Da li ste sigurni da zelite da obrisete knjigu?'\n            ) === true\n        ) {\n            axios.delete('/books/' + book._id).then((res) => {\n                window.alert('Knjiga je uspesno obrisana');\n                const index = books.indexOf(book);\n                const newBooks = books.splice(index, 1);\n                setBooks(newBooks);\n                setNumOfBooks(numOfBooks - 1);\n            });\n        }\n    };\n\n    const editBook = (editedBook) => {\n        setThisBook(editedBook);\n    };\n\n    const closeModal = () => {\n        setIsOpen(false);\n    };\n    const openModal = () => {\n        setIsOpen(true);\n    };\n\n    return (\n        <tr>\n            <td>{thisBook.title}</td>\n            <td>{thisBook.author}</td>\n            <td>{thisBook.publisher}</td>\n            <td>{thisBook.note}</td>\n            <td>\n                <button onClick={() => deleteBook(thisBook)} className=\"actionBtn\">\n                    Obrisi knjigu\n                </button>\n                <button onClick={openModal} className=\"actionBtn\">\n                    Izmeni knjigu\n                </button>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    contentLabel=\"Izmeni knjigu\"\n                >\n                    <EditBook book={thisBook} editBook={editBook} />\n                </Modal>\n            </td>\n        </tr>\n    );\n};\n\nexport { BookRow as default };\n","import React, {useContext} from 'react';\nimport BookRow from './BookRow';\nimport BookContext from '../booksContext';\n\nconst BookTable = ({searchInput, numOfBooksFound, error }) => {\n    const rows = [];\n\n    const {books, setBooks} = useContext(BookContext);\n\n    if (books) {\n        books.forEach((book) => {\n            if (\n                book.title.toLowerCase().indexOf(searchInput.toLowerCase()) ===\n                    -1 &&\n                book.author.toLowerCase().indexOf(searchInput.toLowerCase()) ===\n                    -1 &&\n                book.publisher\n                    .toLowerCase()\n                    .indexOf(searchInput.toLowerCase()) === -1\n            ) {\n                return;\n            }\n            rows.push(\n                <BookRow\n                    book={book}\n                    key={book._id}\n                />\n            );\n        });\n    }\n\n    return (\n        <div>\n            {error || searchInput === '' ? (\n                error\n            ) : (\n                <div>\n                    Pronadjeno knjiga: {numOfBooksFound}\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Naslov</th>\n                                <th>Autor</th>\n                                <th>Izdavač</th>\n                                <th>Napomena</th>\n                                <th>Akcija</th>\n                            </tr>\n                        </thead>\n                        <tbody>{rows}</tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport { BookTable as default };\n","import React, { useState, useEffect } from 'react';\nimport SearchBook from './SearchBook';\nimport BookTable from './BookTable';\nimport axios from '../api';\nimport BooksContext from '../booksContext';\n\nconst FilterableBookTable = () => {\n    const [searchInput, setSearchInput] = useState('');\n    const [books, setBooks] = useState([]);\n    const [error, setError] = useState('');\n    const [numOfBooksFound, setNumOfBooksFound] = useState(0);\n\n    useEffect(() => {\n        setNumOfBooksFound(0);\n        if (searchInput.length >= 3) {\n            axios\n                .get('/books?searchInput=' + searchInput, {\n                    validateStatus: () => true,\n                })\n                .then((res) => {\n                    if (res.status === 404) {\n                        setError('Knjiga nije pronadjena');\n                    } else if (!res.status || res.status >= 500) {\n                        setError('Greska na serveru');\n                    } else {\n                        const books = res.data.books;\n                        setBooks(books);\n                        setError('');\n                        setNumOfBooksFound(books.length);\n                    }\n                })\n                .catch((error) => console.log(error));\n        }\n    }, [searchInput]);\n\n    const handleSearchInputChange = (searchInput) => {\n        setSearchInput(searchInput);\n    };\n\n    return (\n        <div>\n            <SearchBook\n                searchInput={searchInput}\n                onSearchInputChange={handleSearchInputChange}\n            />\n            <BooksContext.Provider value={{ books, setBooks }}>\n                <BookTable searchInput={searchInput} numOfBooksFound={numOfBooksFound} error={error} />\n            </BooksContext.Provider>\n        </div>\n    );\n};\n\nexport { FilterableBookTable as default };\n","import React, { useState, useContext } from 'react';\nimport numOfBooksContext from '../numOfBooksContext';\nimport axios from '../api';\n\nconst AddBook = () => {\n    const [error, setError] = useState('');\n    const {numOfBooks, setNumOfBooks} = useContext(numOfBooksContext);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const title = document.getElementById('title').value;\n        const author = document.getElementById('author').value;\n        const publisher = document.getElementById('publisher').value;\n        const note = document.getElementById('note').value;\n\n        axios\n            .post(\n                '/books',\n                {\n                    title,\n                    author,\n                    publisher,\n                    note,\n                },\n                {\n                    validateStatus: () => true,\n                }\n            )\n            .then((res) => {\n                if (res.status === 201) {\n                    setError('Knjiga je uspesno dodata!');\n                    setNumOfBooks(numOfBooks + 1);\n                } else {\n                    setError('Polja naslov, autor i izdavac su obavezna');\n                }\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    placeholder=\"Naslov knjige\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"author\"\n                    id=\"author\"\n                    placeholder=\"Autor knjige\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"publisher\"\n                    id=\"publisher\"\n                    placeholder=\"Izdavac\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"note\"\n                    id=\"note\"\n                    placeholder=\"Napomena\"\n                />\n                <button type=\"submit\" value=\"Submit\">\n                    Posalji\n                </button>\n            </form>\n            {error}\n        </div>\n    );\n};\n\nexport { AddBook as default };\n","import React, { useState, useEffect } from 'react';\nimport axios from '../api';\nimport FilterableBookTable from './FilterableBookTable';\nimport AddBook from './AddBook';\nimport numOfBooksContext from '../numOfBooksContext';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        border: '1px solid #ccc',\n        background: '#fff',\n        transform: 'translate(-50%, -50%)',\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        borderRadius: '4px',\n        outline: 'none',\n        padding: '20px',\n    },\n};\n\nconst MainComponent = () => {\n    const [numOfBooks, setNumOfBooks] = useState(0);\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    Modal.setAppElement('#root');\n\n    useEffect(() => {\n        axios.get('/books').then((res) => {\n            const numOfBooks = res.data.numOfBooks;\n            setNumOfBooks(numOfBooks);\n        }).catch((e) => console.log(e));\n    }, []);\n\n    const closeModal = () => {\n        setIsOpen(false);\n    };\n    const openModal = () => {\n        setIsOpen(true);\n    };\n\n    return (\n        <numOfBooksContext.Provider value={{ numOfBooks, setNumOfBooks }}>\n            <div>\n                Ukupno knjiga u biblioteci: {numOfBooks} <br />\n                <button onClick={openModal}>Dodaj knjigu</button>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    contentLabel=\"Dodaj knjigu\"\n                >\n                    <AddBook />\n                </Modal>\n                <FilterableBookTable />\n            </div>\n        </numOfBooksContext.Provider>\n    );\n};\n\nexport default MainComponent;\n","import React, {useState} from 'react';\nimport axios from '../api';\n\nconst LoginComponent = () => {\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(e);\n\n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n\n        axios.post(\n            '/users/login',\n            {\n                email,\n                password,\n            },\n            {\n                validateStatus: () => true,\n            }\n        )\n        .then((res) => {\n            if (res.status === 200) {\n                localStorage.setItem('token', res.data.token);\n                window.location.reload(false);\n            }\n            else if (res.status === 403) {\n                setError('Greska!');\n            } else if (res.status === 404) {\n                setError('Korisnik ne postoji');\n            }\n        });\n    };\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)}>\n            <label>\n                Email\n                <input type=\"text\" placeholder=\"Email\" id=\"email\" name=\"email\" />\n            </label>\n            <label>\n                Šifra\n                <input type=\"password\" placeholder=\"Šifra\" id=\"password\" name=\"password\" />\n            </label>\n            <div>\n                <button type=\"submit\">Prijavi se</button>\n            </div>\n            {error}\n        </form>\n    );\n};\n\nexport { LoginComponent as default };\n","import './App.css';\nimport React, { useState } from 'react';\nimport MainComponent from './components/MainComponent';\nimport LoginComponent from './components/LoginComponent';\n\nfunction App() {\n\n    if (!localStorage.getItem('token')) {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1>vLib - virtual library</h1>\n                    <LoginComponent />\n                </header>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>vLib - virtual library</h1>\n            </header>\n            <div className=\"appBody\">\n                <MainComponent />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}